def get_integer(m):
    user_input = int(input(m))
    return user_input


def get_string(m):
    user_input = input(m)
    return user_input


def print_list(l):
    for x in l:
        output = "{:<10} -- {:>4}".format(x[0], x[1])
        print(output)
    return None


def order_pizza(l):
    for i in range(0, len(l)):
        output = "{}: {} {}".format(i, l[i][1], l[i][0])
        print(output)
    order_choice = get_integer("What pizza number do you want?")
    if -1 < order_choice < len(l):
        print("{} is chosen".format(l[order_choice][0]))
    else:
        print("Unrecognisable entry")


def main():

    pizza_list = [
        ["Cheese", 2],
        ["Pepperoni", 4]
    ]

    print()
    print("Welcome to Papa's Pizzeria!")
    print("-"*42)
    print("Please select an option from the menu:")
    menu_list = [
        ["P", "Print Menu"],
        ["O", "Order"],
        ["Q", "Quit"]
    ]
    run_program = True
    while run_program:
        for x in menu_list:

            output = "{}: {}".format(x[0], x[1])
            print(output)
            print("-" * 42)
        user_choice = get_string("Please select an option: -> ")
        print("-" * 42)
        if user_choice == "P":
            print_list(pizza_list)
        elif user_choice == "O":
            order_pizza(pizza_list)
        elif user_choice == "Q":
            print("Thank you for ordering with Papa's Pizzeria!")
            run_program = False
        else:
            print("Unrecognised entry must be P, O or Q")


if __name__ == "__main__":

    main()


----------- REDONE---------------

def get_integer(m):
    user_input = int(input(m))
    return user_input


def get_string(m):
    user_input = input(m)
    return user_input


def pick_up(l):
    name = get_string("What is your name?")
    for i in range(0, len(l)):
        output = "{}: {:<10} -- ${}".format(i, l[i][0], l[i][1])
        print(output)
    user_choice = get_integer("Hi {}, what item number off the menu would you like?".format(name))
    if -1 < user_choice < len(l):
        print("{} is chosen".format(l[user_choice][0]))
    else:
        print("Unrecognisable entry")


def delivery(l):
    name = get_string("What is your name?")
    for i in range(0, len(l)):
        output = "{}: {:<10} -- ${} ".format(i, l[i][0], l[i][1])
        print(output)
    user_choice = get_integer("Hi {}, what item number off the menu would you like?".format(name))
    if -1 < user_choice < len(l):
        print("{} is chosen".format(l[user_choice][0]))
    else:
        print("Unrecognisable entry")


def main():

    pizza_list = [
        ["Cheese", 5],
        ["Pepperoni", 5]
    ]

    option_list = [
        ["D", "Delivery"],
        ["P", "Pick-up"],
        ["Q", "Quit"]
    ]
    print()
    print("Welcome to Papa's Pizzeria!")
    print("-"*42)

    run_program = True

    while run_program:
        for x in option_list:
            output = "{}: {}".format(x[0], x[1])
            print(output)
            print("-" * 42)
        service = get_string("Do you want delivery or pick up ?")
        print("-" * 42)
        if service == "D":
            delivery(pizza_list)
        elif service == "P":
            pick_up(pizza_list)
        elif service == "Q":
            print("Thank you for ordering with Papa's Pizzeria!")
            run_program = False
        else:
            print("Unrecognised entry must be P, D or Q")


if __name__ == "__main__":

    main()

---- Reflection excess ----
Sprint 1 has run smoothly. In my plan I wanted to create a program which allows the user to see the list of options available, choose an item from the menu and
	print out the item they have chosen and create a loop that continues to run as long as the user does not choose to quit the program. It filled the intent of
	this sprint aim and there were no complications along the way. For my next sprint, I want to make the program so that the user can select a pizza type from
	the list and add or minus to the quantity available. I also need to validate as there are issues where it will say the value entered is unrecognisable when a lower
	case or the word version of a number is entered. I think I also may need to rework some of the messages to make them more suitable for a pizza program and I also need
	to do some formatting to make the program nicer to use. It also may function better if everytime there is an unrecognisable entry from a certain function, it returns
	the function instead of going back to the main menu. I will validate in a later sprint but I will fix my more minor issues in sprint 2.